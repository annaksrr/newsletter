{"ast":null,"code":"'use strict';\n\nvar Region = require('region-align');\n\nvar assign = require('object-assign');\n\nvar align = require('./align');\n\nmodule.exports = function getPositionStyle(props, state) {\n  if (!state.menu || !this.didMount) {\n    this.prevMenuIndex = -1;\n    return;\n  }\n\n  var offset = state.menuOffset;\n  var left = offset.left + offset.width;\n  var top = offset.top;\n  var menuIndex = state.itemProps.index;\n  var sameMenu = this.prevMenuIndex == menuIndex;\n\n  if (this.aligning && !sameMenu) {\n    this.aligning = false;\n  }\n\n  this.prevMenuIndex = menuIndex;\n  var style = {\n    position: 'absolute',\n    visibility: 'hidden',\n    overflow: 'hidden',\n    pointerEvents: 'none',\n    left: left,\n    top: top,\n    zIndex: 1\n  };\n\n  if (!this.aligning && !sameMenu) {\n    setTimeout(function () {\n      if (!this.didMount) {\n        return;\n      }\n\n      var thisRegion = Region.from(this.getDOMNode());\n      var menuItemRegion = Region.from({\n        left: thisRegion.left,\n        top: thisRegion.top + offset.top,\n        width: offset.width,\n        height: offset.height\n      });\n      var subMenuMounted = this.refs.subMenu && this.refs.subMenu.isMounted();\n\n      if (!subMenuMounted) {\n        return;\n      }\n\n      var subMenuRegion = Region.from(this.refs.subMenu.refs.scrollContainer.getCurrentSizeDOM());\n      var initialHeight = subMenuRegion.height;\n      var alignPos = align(props, subMenuRegion,\n      /* alignTo */\n      menuItemRegion, props.constrainTo);\n      var newHeight = subMenuRegion.height;\n      var maxHeight;\n\n      if (newHeight < initialHeight) {\n        maxHeight = newHeight - props.subMenuConstrainMargin;\n      }\n\n      if (maxHeight && alignPos == -1\n      /* upwards*/\n      ) {\n          subMenuRegion.top = subMenuRegion.bottom - maxHeight;\n        }\n\n      var newLeft = subMenuRegion.left - thisRegion.left;\n      var newTop = subMenuRegion.top - thisRegion.top;\n\n      if (Math.abs(newLeft - left) < 5) {\n        newLeft = left;\n      }\n\n      if (Math.abs(newTop - top) < 5) {\n        newTop = top;\n      }\n\n      this.subMenuPosition = newLeft < 0 ? 'left' : 'right';\n      this.alignOffset = {\n        left: newLeft,\n        top: newTop\n      };\n      this.aligning = true;\n      this.setState({\n        subMenuMaxHeight: maxHeight\n      });\n    }.bind(this), 0);\n  }\n\n  if (sameMenu || this.aligning && this.alignOffset) {\n    assign(style, this.alignOffset);\n    style.visibility = 'visible';\n    delete style.pointerEvents;\n    delete style.overflow;\n  }\n\n  this.aligning = false;\n  return style;\n};","map":{"version":3,"sources":["C:/Users/Anna/Desktop/Privat/Additive2/newsletter/newsletter/node_modules/react-menus/lib/getSubMenuPositionStyle.js"],"names":["Region","require","assign","align","module","exports","getPositionStyle","props","state","menu","didMount","prevMenuIndex","offset","menuOffset","left","width","top","menuIndex","itemProps","index","sameMenu","aligning","style","position","visibility","overflow","pointerEvents","zIndex","setTimeout","thisRegion","from","getDOMNode","menuItemRegion","height","subMenuMounted","refs","subMenu","isMounted","subMenuRegion","scrollContainer","getCurrentSizeDOM","initialHeight","alignPos","constrainTo","newHeight","maxHeight","subMenuConstrainMargin","bottom","newLeft","newTop","Math","abs","subMenuPosition","alignOffset","setState","subMenuMaxHeight","bind"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Region = require('region-align')\nvar assign = require('object-assign')\nvar align  = require('./align')\n\nmodule.exports = function getPositionStyle(props, state){\n    if (!state.menu || !this.didMount){\n        this.prevMenuIndex = -1\n        return\n    }\n\n    var offset = state.menuOffset\n    var left   = offset.left + offset.width\n    var top    = offset.top\n\n    var menuIndex = state.itemProps.index\n    var sameMenu = this.prevMenuIndex == menuIndex\n\n    if (this.aligning && !sameMenu){\n        this.aligning = false\n    }\n\n    this.prevMenuIndex = menuIndex\n\n    var style = {\n        position     : 'absolute',\n        visibility   : 'hidden',\n        overflow     : 'hidden',\n        pointerEvents: 'none',\n        left         : left,\n        top          : top,\n        zIndex       : 1\n    }\n\n    if (!this.aligning && !sameMenu){\n        setTimeout(function(){\n\n            if (!this.didMount){\n                return\n            }\n\n            var thisRegion = Region.from(this.getDOMNode())\n            var menuItemRegion = Region.from({\n                left  : thisRegion.left,\n                top   : thisRegion.top + offset.top,\n                width : offset.width,\n                height: offset.height\n            })\n\n            var subMenuMounted = this.refs.subMenu && this.refs.subMenu.isMounted()\n            if (!subMenuMounted){\n                return\n            }\n\n            var subMenuRegion = Region.from(this.refs.subMenu.refs.scrollContainer.getCurrentSizeDOM())\n\n            var initialHeight = subMenuRegion.height\n\n            var alignPos = align(props, subMenuRegion, /* alignTo */ menuItemRegion, props.constrainTo)\n\n            var newHeight = subMenuRegion.height\n            var maxHeight\n\n            if (newHeight < initialHeight){\n                maxHeight = newHeight - props.subMenuConstrainMargin\n            }\n\n            if (maxHeight && alignPos == -1 /* upwards*/){\n                subMenuRegion.top = subMenuRegion.bottom - maxHeight\n            }\n\n            var newLeft = subMenuRegion.left - thisRegion.left\n            var newTop  = subMenuRegion.top  - thisRegion.top\n\n            if (Math.abs(newLeft - left) < 5){\n                newLeft = left\n            }\n\n            if (Math.abs(newTop - top) < 5){\n                newTop = top\n            }\n\n            this.subMenuPosition = newLeft < 0? 'left': 'right'\n\n            this.alignOffset = {\n                left: newLeft,\n                top : newTop\n            }\n            this.aligning = true\n\n            this.setState({\n                subMenuMaxHeight: maxHeight\n            })\n\n        }.bind(this), 0)\n    }\n\n    if (sameMenu || (this.aligning && this.alignOffset)){\n        assign(style, this.alignOffset)\n        style.visibility = 'visible'\n        delete style.pointerEvents\n        delete style.overflow\n    }\n\n    this.aligning = false\n\n    return style\n}"]},"metadata":{},"sourceType":"script"}