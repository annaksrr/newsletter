{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anna\\\\Desktop\\\\Privat\\\\Additive2\\\\newsletter\\\\newsletter\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from './index.module.css';\nimport validator from 'validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n\n      if (!this.state.errormessageName.equals('') && !this.state.errormessageEmail.equals('')) {\n        //alert(\"You are submitting \" + this.state.username);\n        let url = 'https://api.sheety.co/a059a44709599c766a704967b9cc3d24/subscribers/subscribers';\n        let body = {\n          subscriber: {\n            fullName: this.state.username,\n            gender: this.state.gender,\n            emailAddress: this.state.email,\n            state: \"subscribed\"\n          }\n        };\n        fetch(url, {\n          method: \"POST\",\n          body: JSON.stringify(body),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        }).then(response => response.json()).then(json => {\n          // Do something with object\n          console.log(json.subscriber);\n        });\n      }\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      let errN = '';\n      let errE = '';\n\n      if (nam === \"email\") {\n        if (!validator.isEmail(val)) {\n          errE = /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: styles.err,\n            children: \"This email is not valid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 24\n          }, this);\n          this.setState({\n            errormessageEmail: errE\n          });\n        } else this.setState({\n          errormessageEmail: ''\n        });\n      } else {\n        let letters = /^[A-Za-z]+$/;\n\n        if (!val.match(letters)) {\n          errN = /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: styles.err,\n            children: \"Please use only letters \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 24\n          }, this);\n          this.setState({\n            errormessageName: errN\n          });\n        } else this.setState({\n          errormessageName: ''\n        });\n      }\n\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      username: '',\n      email: null,\n      gender: 'Female',\n      errormessageName: '',\n      errormessageEmail: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello \", this.state.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"gender\",\n        onChange: this.myChangeHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Female\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Male\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Diverse\",\n          children: \"Diverse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }, this), this.state.errormessageName, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }, this), this.state.errormessageEmail, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(MyForm, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 102,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Anna/Desktop/Privat/Additive2/newsletter/newsletter/src/index.js"],"names":["React","ReactDOM","styles","validator","MyForm","Component","constructor","props","mySubmitHandler","event","preventDefault","state","errormessageName","equals","errormessageEmail","url","body","subscriber","fullName","username","gender","emailAddress","email","fetch","method","JSON","stringify","headers","then","response","json","console","log","myChangeHandler","nam","target","name","val","value","errN","errE","isEmail","err","setState","letters","match","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from './index.module.css'\nimport validator from 'validator';\n\nclass MyForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: null,\n            gender: 'Female',\n            errormessageName: '',\n            errormessageEmail: ''\n        };\n    }\n    mySubmitHandler = (event) => {\n        event.preventDefault();\n        if(!this.state.errormessageName.equals('') && !this.state.errormessageEmail.equals('')) {\n            //alert(\"You are submitting \" + this.state.username);\n            let url = 'https://api.sheety.co/a059a44709599c766a704967b9cc3d24/subscribers/subscribers';\n            let body = {\n                subscriber: {\n                    fullName: this.state.username,\n                    gender: this.state.gender,\n                    emailAddress: this.state.email,\n                    state: \"subscribed\"\n                }\n            }\n            fetch(url, {\n                method: \"POST\",\n                body: JSON.stringify(body),\n                headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n            })\n                .then((response) => response.json())\n                .then(json => {\n                    // Do something with object\n                    console.log(json.subscriber);\n                });\n        }\n    }\n    myChangeHandler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        let errN = '';\n        let errE = '';\n\n        if (nam === \"email\") {\n            if (!validator.isEmail(val)) {\n                errE = <strong className={styles.err}>This email is not valid</strong>;\n                this.setState({errormessageEmail: errE});\n            }\n            else\n                this.setState({errormessageEmail: ''});\n        }\n        else {\n            let letters = /^[A-Za-z]+$/;\n            if (!val.match(letters)) {\n                errN = <strong className={styles.err}>Please use only letters </strong>\n                this.setState({errormessageName: errN});\n            }\n            else\n                this.setState({errormessageName: ''});\n        }\n        this.setState({[nam]: val});\n    }\n    render() {\n        return (\n            <form onSubmit={this.mySubmitHandler}>\n                <h1>Hello {this.state.username}</h1>\n\n                <select name='gender' onChange={this.myChangeHandler}>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Diverse\">Diverse</option>\n                </select>\n\n                <p>Enter your name:</p>\n                <input\n                    type='text'\n                    name='username'\n                    onChange={this.myChangeHandler}\n                /><br></br>\n                {this.state.errormessageName}\n                <p>Enter your email:</p>\n                <input\n                    type='text'\n                    name='email'\n                    onChange={this.myChangeHandler}\n                /><br></br>\n                {this.state.errormessageEmail}\n                <input\n                    type='submit'\n                    />\n\n            </form>\n        );\n    }\n}\n\n\nReactDOM.render(<MyForm />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}