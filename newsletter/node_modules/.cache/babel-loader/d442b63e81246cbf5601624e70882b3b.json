{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar MenuItemCell = require('./MenuItemCell');\n\nvar cloneWithProps = require('react-clonewithprops');\n\nvar assign = require('object-assign');\n\nfunction emptyFn() {}\n\nmodule.exports = function (props, state) {\n  var expandedIndex = state.itemProps ? state.itemProps.index : -1;\n  var children = props.children;\n  var maxCellCount = 1;\n  var menuItems = [];\n  React.Children.map(children, function (item) {\n    var itemProps = item.props;\n    menuItems.push(item);\n\n    if (!itemProps || !itemProps.isMenuItem) {\n      return;\n    }\n\n    var count = React.Children.count(itemProps.children);\n    maxCellCount = Math.max(maxCellCount, count);\n  });\n  var itemStyleProps = props.itemStyleProps;\n  var i = -1;\n  var result = menuItems.map(function (item, index) {\n    var itemProps = item.props;\n\n    if (itemProps && itemProps.isMenuItem) {\n      i++;\n      itemProps.onMenuItemMouseOver = this.onMenuItemMouseOver;\n      itemProps.onMenuItemMouseOut = this.onMenuItemMouseOut;\n    }\n\n    var children = React.Children.map(itemProps.children, function (c) {\n      return c;\n    });\n    var count = React.Children.count(children);\n\n    if (count < maxCellCount) {\n      children = children ? [children] : [];\n    }\n\n    while (count < maxCellCount) {\n      count++;\n      children.push(React.createElement(MenuItemCell, null));\n    }\n\n    var onClick = itemProps.onClick || emptyFn;\n    var cloned = cloneWithProps(item, assign({\n      interactionStyles: props.interactionStyles,\n      itemIndex: i,\n      itemCount: menuItems.length,\n      key: index,\n      index: index,\n      expanded: expandedIndex == index,\n      children: children,\n      expander: props.expander,\n      applyDefaultTheme: props.applyDefaultTheme,\n      theme: props.theme,\n      themes: props.themes || this.constructor.themes,\n      onExpanderClick: this.onMenuItemExpanderClick,\n      onClick: function (event, props, index) {\n        onClick.apply(null, arguments);\n        this.onMenuItemClick(event, props, index);\n      }.bind(this)\n    }, {\n      style: itemStyleProps.itemStyle,\n      overStyle: itemStyleProps.itemOverStyle,\n      activeStyle: itemStyleProps.itemActiveStyle,\n      disabledStyle: itemStyleProps.itemDisabledStyle,\n      expandedStyle: itemStyleProps.itemExpandedStyle,\n      cellStyle: itemStyleProps.cellStyle\n    }));\n    return cloned;\n  }, this);\n  return result;\n};","map":{"version":3,"sources":["C:/Users/Anna/Desktop/Privat/Additive2/newsletter/newsletter/node_modules/react-menus/lib/renderChildren.js"],"names":["React","require","MenuItemCell","cloneWithProps","assign","emptyFn","module","exports","props","state","expandedIndex","itemProps","index","children","maxCellCount","menuItems","Children","map","item","push","isMenuItem","count","Math","max","itemStyleProps","i","result","onMenuItemMouseOver","onMenuItemMouseOut","c","createElement","onClick","cloned","interactionStyles","itemIndex","itemCount","length","key","expanded","expander","applyDefaultTheme","theme","themes","constructor","onExpanderClick","onMenuItemExpanderClick","event","apply","arguments","onMenuItemClick","bind","style","itemStyle","overStyle","itemOverStyle","activeStyle","itemActiveStyle","disabledStyle","itemDisabledStyle","expandedStyle","itemExpandedStyle","cellStyle"],"mappings":"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","sourcesContent":["'use strict';\n\nvar React = require('react')\nvar MenuItemCell = require('./MenuItemCell')\n\nvar cloneWithProps = require('react-clonewithprops')\nvar assign         = require('object-assign')\n\nfunction emptyFn(){}\n\nmodule.exports = function(props, state) {\n\n    var expandedIndex  = state.itemProps?\n                            state.itemProps.index:\n                            -1\n\n    var children     = props.children\n    var maxCellCount = 1\n    var menuItems    = []\n\n    React.Children.map(children, function(item){\n        var itemProps = item.props\n\n        menuItems.push(item)\n\n        if (!itemProps || !itemProps.isMenuItem){\n            return\n        }\n\n        var count = React.Children.count(itemProps.children)\n\n        maxCellCount = Math.max(maxCellCount, count)\n    })\n\n    var itemStyleProps = props.itemStyleProps\n    var i = -1\n    var result = menuItems.map(function(item, index){\n        var itemProps = item.props\n\n        if (itemProps && itemProps.isMenuItem){\n            i++\n\n            itemProps.onMenuItemMouseOver = this.onMenuItemMouseOver\n            itemProps.onMenuItemMouseOut  = this.onMenuItemMouseOut\n        }\n\n        var children = React.Children.map(itemProps.children, function(c){ return c })\n        var count    = React.Children.count(children)\n\n        if (count < maxCellCount){\n            children = children? [children]: []\n        }\n\n        while (count < maxCellCount){\n            count++\n            children.push(React.createElement(MenuItemCell, null))\n        }\n\n        var onClick = itemProps.onClick || emptyFn\n\n        var cloned = cloneWithProps(item, assign({\n            interactionStyles: props.interactionStyles,\n            itemIndex: i,\n            itemCount: menuItems.length,\n            key      : index,\n            index    : index,\n            expanded : expandedIndex == index,\n            children : children,\n            expander : props.expander,\n            applyDefaultTheme: props.applyDefaultTheme,\n            theme    : props.theme,\n            themes   : props.themes || this.constructor.themes,\n            onExpanderClick: this.onMenuItemExpanderClick,\n            onClick  : function(event, props, index){\n                onClick.apply(null, arguments)\n                this.onMenuItemClick(event, props, index)\n            }.bind(this)\n        }, {\n            style        : itemStyleProps.itemStyle,\n            overStyle    : itemStyleProps.itemOverStyle,\n            activeStyle  : itemStyleProps.itemActiveStyle,\n            disabledStyle: itemStyleProps.itemDisabledStyle,\n            expandedStyle: itemStyleProps.itemExpandedStyle,\n            cellStyle    : itemStyleProps.cellStyle\n        }))\n\n        return cloned\n\n    }, this)\n\n    return result\n}"]},"metadata":{},"sourceType":"script"}