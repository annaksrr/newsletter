{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anna\\\\Desktop\\\\Privat\\\\Additive2\\\\newsletter\\\\newsletter\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from './index.module.css';\nimport validator from 'validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      event.preventDefault(); //alert(\"You are submitting \" + this.state.username);\n\n      let url = 'https://api.sheety.co/a059a44709599c766a704967b9cc3d24/subscribers/subscribers';\n      let body = {\n        subscriber: {\n          fullName: \"a\",\n          gender: \"bar\",\n          emailAddress: \"b\",\n          state: \"subscribed\"\n        }\n      };\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(body)\n      }).then(response => response.json()).then(json => {\n        // Do something with object\n        console.log(json.subscriber);\n      });\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      let err = '';\n\n      if (nam === \"email\") {\n        if (validator.isEmail(val)) {\n          err = /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"This email is valid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 23\n          }, this);\n        } else err = /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: styles.err,\n          children: \"This email is not valid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 23\n        }, this);\n      }\n\n      this.setState({\n        errormessage: err\n      });\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      username: '',\n      email: null,\n      errormessage: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello \", this.state.username, \" \", this.state.age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), this.state.errormessage, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(MyForm, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 80,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Anna/Desktop/Privat/Additive2/newsletter/newsletter/src/index.js"],"names":["React","ReactDOM","styles","validator","MyForm","Component","constructor","props","mySubmitHandler","event","preventDefault","url","body","subscriber","fullName","gender","emailAddress","state","fetch","method","JSON","stringify","then","response","json","console","log","myChangeHandler","nam","target","name","val","value","err","isEmail","setState","errormessage","username","email","render","age","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from './index.module.css'\nimport validator from 'validator';\n\nclass MyForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: null,\n            errormessage: ''\n        };\n    }\n    mySubmitHandler = (event) => {\n        event.preventDefault();\n        //alert(\"You are submitting \" + this.state.username);\n        let url = 'https://api.sheety.co/a059a44709599c766a704967b9cc3d24/subscribers/subscribers';\n        let body = {\n            subscriber: {\n                fullName: \"a\",\n                gender: \"bar\",\n                emailAddress: \"b\",\n                state: \"subscribed\"\n            }\n        }\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(body)\n        })\n            .then((response) => response.json())\n            .then(json => {\n                // Do something with object\n                console.log(json.subscriber);\n            });\n    }\n    myChangeHandler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        let err = '';\n\n        if (nam === \"email\") {\n            if (validator.isEmail(val)) {\n                err = <strong>This email is valid</strong>;\n            }\n            else\n                err = <strong className={styles.err}>This email is not valid</strong>;\n\n        }\n        this.setState({errormessage: err});\n        this.setState({[nam]: val});\n    }\n    render() {\n        return (\n            <form onSubmit={this.mySubmitHandler}>\n                <h1>Hello {this.state.username} {this.state.age}</h1>\n                <p>Enter your name:</p>\n                <input\n                    type='text'\n                    name='username'\n                    onChange={this.myChangeHandler}\n                />\n                <p>Enter your email:</p>\n                <input\n                    type='text'\n                    name='email'\n                    onChange={this.myChangeHandler}\n                />\n                {this.state.errormessage}\n                <input\n                    type='submit'\n                    />\n\n            </form>\n        );\n    }\n}\n\n\nReactDOM.render(<MyForm />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}