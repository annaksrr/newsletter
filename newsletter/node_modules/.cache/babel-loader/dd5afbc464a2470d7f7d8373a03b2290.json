{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anna\\\\Desktop\\\\Privat\\\\Additive2\\\\newsletter\\\\newsletter\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from './index.module.css';\nimport validator from 'validator';\nimport Popup from 'react-popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n\n      if (this.state.errormessageName === '' && this.state.errormessageEmail === '') {\n        this.setState({\n          disabled: true\n        });\n        let url = 'https://api.sheety.co/a059a44709599c766a704967b9cc3d24/subscribers/subscribers';\n        let body = {\n          subscriber: {\n            fullName: this.state.username,\n            gender: this.state.gender,\n            emailAddress: this.state.email,\n            state: \"subscribed\"\n          }\n        };\n        fetch(url, {\n          method: \"POST\",\n          body: JSON.stringify(body),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        }).then(response => response.json()).then(json => {\n          Popup.create({\n            title: null,\n            content: 'This popup uses the create method directly to get more control. This popup demonstrates custom buttons.',\n            buttons: {\n              left: [{\n                text: 'Cancel',\n                className: 'danger',\n                action: function () {\n                  Popup.alert('You pressed the Cancel btn');\n                  /** Close this popup. Close will always close the current visible one, if one is visible */\n\n                  Popup.close();\n                }\n              }],\n              right: [{\n                text: 'Alt',\n                key: 'ctrl+enter',\n                action: function () {\n                  // Passing true as the second argument to the create method\n                  // displays it directly, without interupting the queue.\n                  Popup.create({\n                    title: null,\n                    content: 'I was configured to display right away, without affecting the queue. Closing this will display the previously visible popup.',\n                    buttons: {\n                      left: ['cancel'],\n                      right: []\n                    }\n                  }, true);\n                }\n              }, {\n                text: 'Save',\n                className: 'success',\n                action: function () {\n                  Popup.alert('You pressed the Save btn');\n                  /** Close this popup. Close will always close the current visible one, if one is visible */\n\n                  Popup.close();\n                }\n              }]\n            }\n          }); // Do something with object\n\n          console.log(json.subscriber);\n        });\n      }\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      let errN = '';\n      let errE = '';\n\n      if (nam === \"email\") {\n        if (!validator.isEmail(val)) {\n          errE = /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"This email is not valid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 24\n          }, this);\n          this.setState({\n            errormessageEmail: errE\n          });\n        } else this.setState({\n          errormessageEmail: ''\n        });\n      } else if (nam === 'username') {\n        let letters = /^[A-Za-z]+$/;\n\n        if (!val.match(letters)) {\n          errN = /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Please use only letters \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 24\n          }, this);\n          this.setState({\n            errormessageName: errN\n          });\n        } else this.setState({\n          errormessageName: ''\n        });\n      }\n\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      username: '',\n      email: null,\n      gender: 'Female',\n      errormessageName: '*This field is required',\n      errormessageEmail: '*This field is required',\n      disabled: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ADDITIVE NEWSLETTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: styles.dropdown,\n        name: \"gender\",\n        disabled: this.state.disabled,\n        onChange: this.myChangeHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Female\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Male\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Diverse\",\n          children: \"Diverse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        disabled: this.state.disabled,\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.err,\n        children: this.state.errormessageName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        disabled: this.state.disabled,\n        onChange: this.myChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.err,\n        children: this.state.errormessageEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        disabled: this.state.disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(MyForm, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 153,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Anna/Desktop/Privat/Additive2/newsletter/newsletter/src/index.js"],"names":["React","ReactDOM","styles","validator","Popup","MyForm","Component","constructor","props","mySubmitHandler","event","preventDefault","state","errormessageName","errormessageEmail","setState","disabled","url","body","subscriber","fullName","username","gender","emailAddress","email","fetch","method","JSON","stringify","headers","then","response","json","create","title","content","buttons","left","text","className","action","alert","close","right","key","console","log","myChangeHandler","nam","target","name","val","value","errN","errE","isEmail","letters","match","render","dropdown","err","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,eAXmB,GAWAC,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAG,KAAKC,KAAL,CAAWC,gBAAX,KAAgC,EAAhC,IAAuC,KAAKD,KAAL,CAAWE,iBAAX,KAAiC,EAA3E,EAA+E;AAC3E,aAAKC,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAd;AACA,YAAIC,GAAG,GAAG,gFAAV;AACA,YAAIC,IAAI,GAAG;AACPC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWS,QADb;AAERC,YAAAA,MAAM,EAAE,KAAKV,KAAL,CAAWU,MAFX;AAGRC,YAAAA,YAAY,EAAE,KAAKX,KAAL,CAAWY,KAHjB;AAIRZ,YAAAA,KAAK,EAAE;AAJC;AADL,SAAX;AAQAa,QAAAA,KAAK,CAACR,GAAD,EAAM;AACPS,UAAAA,MAAM,EAAE,MADD;AAEPR,UAAAA,IAAI,EAAES,IAAI,CAACC,SAAL,CAAeV,IAAf,CAFC;AAGPW,UAAAA,OAAO,EAAE;AAAC,4BAAgB;AAAjB;AAHF,SAAN,CAAL,CAKKC,IALL,CAKWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EALxB,EAMKF,IANL,CAMUE,IAAI,IAAI;AACV5B,UAAAA,KAAK,CAAC6B,MAAN,CAAa;AACTC,YAAAA,KAAK,EAAE,IADE;AAETC,YAAAA,OAAO,EAAE,yGAFA;AAGTC,YAAAA,OAAO,EAAE;AACLC,cAAAA,IAAI,EAAE,CAAC;AACHC,gBAAAA,IAAI,EAAE,QADH;AAEHC,gBAAAA,SAAS,EAAE,QAFR;AAGHC,gBAAAA,MAAM,EAAE,YAAY;AAChBpC,kBAAAA,KAAK,CAACqC,KAAN,CAAY,4BAAZ;AAEA;;AACArC,kBAAAA,KAAK,CAACsC,KAAN;AACH;AARE,eAAD,CADD;AAWLC,cAAAA,KAAK,EAAE,CAAC;AACJL,gBAAAA,IAAI,EAAE,KADF;AAEJM,gBAAAA,GAAG,EAAE,YAFD;AAGJJ,gBAAAA,MAAM,EAAE,YAAY;AAChB;AACA;AACApC,kBAAAA,KAAK,CAAC6B,MAAN,CAAa;AACTC,oBAAAA,KAAK,EAAE,IADE;AAETC,oBAAAA,OAAO,EAAE,8HAFA;AAGTC,oBAAAA,OAAO,EAAE;AACLC,sBAAAA,IAAI,EAAE,CAAC,QAAD,CADD;AAELM,sBAAAA,KAAK,EAAE;AAFF;AAHA,mBAAb,EAOG,IAPH;AAQH;AAdG,eAAD,EAeJ;AACCL,gBAAAA,IAAI,EAAE,MADP;AAECC,gBAAAA,SAAS,EAAE,SAFZ;AAGCC,gBAAAA,MAAM,EAAE,YAAY;AAChBpC,kBAAAA,KAAK,CAACqC,KAAN,CAAY,0BAAZ;AAEA;;AACArC,kBAAAA,KAAK,CAACsC,KAAN;AACH;AARF,eAfI;AAXF;AAHA,WAAb,EADU,CA2CV;;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACb,UAAjB;AACH,SAnDL;AAoDH;AACJ,KA7EkB;;AAAA,SA8EnB4B,eA9EmB,GA8EArC,KAAD,IAAW;AACzB,UAAIsC,GAAG,GAAGtC,KAAK,CAACuC,MAAN,CAAaC,IAAvB;AACA,UAAIC,GAAG,GAAGzC,KAAK,CAACuC,MAAN,CAAaG,KAAvB;AACA,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,IAAI,GAAG,EAAX;;AAEA,UAAIN,GAAG,KAAK,OAAZ,EAAqB;AACjB,YAAI,CAAC7C,SAAS,CAACoD,OAAV,CAAkBJ,GAAlB,CAAL,EAA6B;AACzBG,UAAAA,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACA,eAAKvC,QAAL,CAAc;AAACD,YAAAA,iBAAiB,EAAEwC;AAApB,WAAd;AACH,SAHD,MAKI,KAAKvC,QAAL,CAAc;AAACD,UAAAA,iBAAiB,EAAE;AAApB,SAAd;AACP,OAPD,MAQK,IAAIkC,GAAG,KAAK,UAAZ,EAAuB;AACxB,YAAIQ,OAAO,GAAG,aAAd;;AACA,YAAI,CAACL,GAAG,CAACM,KAAJ,CAAUD,OAAV,CAAL,EAAyB;AACrBH,UAAAA,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACA,eAAKtC,QAAL,CAAc;AAACF,YAAAA,gBAAgB,EAAEwC;AAAnB,WAAd;AACH,SAHD,MAKI,KAAKtC,QAAL,CAAc;AAACF,UAAAA,gBAAgB,EAAE;AAAnB,SAAd;AACP;;AACD,WAAKE,QAAL,CAAc;AAAC,SAACiC,GAAD,GAAOG;AAAR,OAAd;AACH,KAtGkB;;AAEf,SAAKvC,KAAL,GAAa;AACTS,MAAAA,QAAQ,EAAE,EADD;AAETG,MAAAA,KAAK,EAAE,IAFE;AAGTF,MAAAA,MAAM,EAAE,QAHC;AAITT,MAAAA,gBAAgB,EAAE,yBAJT;AAKTC,MAAAA,iBAAiB,EAAE,yBALV;AAMTE,MAAAA,QAAQ,EAAE;AAND,KAAb;AAQH;;AA6FD0C,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKjD,eAArB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAQ,QAAA,SAAS,EAAEP,MAAM,CAACyD,QAA1B;AAAoC,QAAA,IAAI,EAAC,QAAzC;AAAkD,QAAA,QAAQ,EAAE,KAAK/C,KAAL,CAAWI,QAAvE;AAAiF,QAAA,QAAQ,EAAE,KAAK+B,eAAhG;AAAA,gCACI;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,QAAQ,EAAG,KAAKnC,KAAL,CAAWI,QAH1B;AAII,QAAA,QAAQ,EAAE,KAAK+B;AAJnB;AAAA;AAAA;AAAA;AAAA,cAVJ,eAeM;AAAA;AAAA;AAAA;AAAA,cAfN,eAgBI;AAAG,QAAA,SAAS,EAAE7C,MAAM,CAAC0D,GAArB;AAAA,kBACK,KAAKhD,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ,eAoBI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,QAAQ,EAAG,KAAKD,KAAL,CAAWI,QAH1B;AAII,QAAA,QAAQ,EAAE,KAAK+B;AAJnB;AAAA;AAAA;AAAA;AAAA,cApBJ,eAyBM;AAAA;AAAA;AAAA;AAAA,cAzBN,eA0BI;AAAG,QAAA,SAAS,EAAE7C,MAAM,CAAC0D,GAArB;AAAA,kBACK,KAAKhD,KAAL,CAAWE;AADhB;AAAA;AAAA;AAAA;AAAA,cA1BJ,eA6BI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWI;AAFzB;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoCH;;AA7IgC;;AAiJrCf,QAAQ,CAACyD,MAAT,eAAgB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA4BG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5B","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport styles from './index.module.css'\nimport validator from 'validator';\nimport Popup from 'react-popup';\n\nclass MyForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: null,\n            gender: 'Female',\n            errormessageName: '*This field is required',\n            errormessageEmail: '*This field is required',\n            disabled: false\n        };\n    }\n    mySubmitHandler = (event) => {\n        event.preventDefault();\n        if(this.state.errormessageName === ''  && this.state.errormessageEmail === '') {\n            this.setState({disabled: true});\n            let url = 'https://api.sheety.co/a059a44709599c766a704967b9cc3d24/subscribers/subscribers';\n            let body = {\n                subscriber: {\n                    fullName: this.state.username,\n                    gender: this.state.gender,\n                    emailAddress: this.state.email,\n                    state: \"subscribed\"\n                }\n            }\n            fetch(url, {\n                method: \"POST\",\n                body: JSON.stringify(body),\n                headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n            })\n                .then((response) => response.json())\n                .then(json => {\n                    Popup.create({\n                        title: null,\n                        content: 'This popup uses the create method directly to get more control. This popup demonstrates custom buttons.',\n                        buttons: {\n                            left: [{\n                                text: 'Cancel',\n                                className: 'danger',\n                                action: function () {\n                                    Popup.alert('You pressed the Cancel btn');\n\n                                    /** Close this popup. Close will always close the current visible one, if one is visible */\n                                    Popup.close();\n                                }\n                            }],\n                            right: [{\n                                text: 'Alt',\n                                key: 'ctrl+enter',\n                                action: function () {\n                                    // Passing true as the second argument to the create method\n                                    // displays it directly, without interupting the queue.\n                                    Popup.create({\n                                        title: null,\n                                        content: 'I was configured to display right away, without affecting the queue. Closing this will display the previously visible popup.',\n                                        buttons: {\n                                            left: ['cancel'],\n                                            right: []\n                                        }\n                                    }, true);\n                                }\n                            }, {\n                                text: 'Save',\n                                className: 'success',\n                                action: function () {\n                                    Popup.alert('You pressed the Save btn');\n\n                                    /** Close this popup. Close will always close the current visible one, if one is visible */\n                                    Popup.close();\n                                }\n                            }]\n                        }\n                    });\n\n                    // Do something with object\n                    console.log(json.subscriber);\n                });\n        }\n    }\n    myChangeHandler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        let errN = '';\n        let errE = '';\n\n        if (nam === \"email\") {\n            if (!validator.isEmail(val)) {\n                errE = <strong>This email is not valid</strong>;\n                this.setState({errormessageEmail: errE});\n            }\n            else\n                this.setState({errormessageEmail: ''});\n        }\n        else if (nam === 'username'){\n            let letters = /^[A-Za-z]+$/;\n            if (!val.match(letters)) {\n                errN = <strong>Please use only letters </strong>\n                this.setState({errormessageName: errN});\n            }\n            else\n                this.setState({errormessageName: ''});\n        }\n        this.setState({[nam]: val});\n    }\n    render() {\n        return (\n            <form onSubmit={this.mySubmitHandler}>\n                <h1>ADDITIVE NEWSLETTER</h1>\n\n                <select className={styles.dropdown} name='gender' disabled={this.state.disabled} onChange={this.myChangeHandler}>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Diverse\" >Diverse</option>\n                </select>\n\n                <p>Enter your name:</p>\n                <input\n                    type='text'\n                    name='username'\n                    disabled= {this.state.disabled}\n                    onChange={this.myChangeHandler}\n                /><br />\n                <p className={styles.err}>\n                    {this.state.errormessageName}\n                </p>\n                <p>Enter your email:</p>\n                <input\n                    type='text'\n                    name='email'\n                    disabled= {this.state.disabled}\n                    onChange={this.myChangeHandler}\n                /><br />\n                <p className={styles.err}>\n                    {this.state.errormessageEmail}\n                </p>\n                <input\n                    type='submit'\n                    disabled={this.state.disabled}\n                    />\n            </form>\n        );\n    }\n}\n\n\nReactDOM.render(<MyForm />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}