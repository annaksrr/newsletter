{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anna\\\\Desktop\\\\Privat\\\\Additive2\\\\newsletter\\\\newsletter\\\\src\\\\Backend.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Backend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  makeTable() {\n    const columns = [{\n      field: 'id',\n      headerName: 'ID',\n      width: 70\n    }, {\n      field: 'fullName',\n      headerName: ' fullName',\n      width: 130\n    }, {\n      field: 'lastName',\n      headerName: 'Last name',\n      width: 130\n    }, {\n      field: 'age',\n      headerName: 'Age',\n      type: 'number',\n      width: 90\n    }, {\n      field: 'fullName',\n      headerName: 'Full name',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: params => `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`\n    }];\n    const rows = [{\n      id: 1,\n      lastName: 'Snow',\n      firstName: 'Jon',\n      age: 35\n    }, {\n      id: 2,\n      lastName: 'Lannister',\n      firstName: 'Cersei',\n      age: 42\n    }, {\n      id: 3,\n      lastName: 'Lannister',\n      firstName: 'Jaime',\n      age: 45\n    }, {\n      id: 4,\n      lastName: 'Stark',\n      firstName: 'Arya',\n      age: 16\n    }, {\n      id: 5,\n      lastName: 'Targaryen',\n      firstName: 'Daenerys',\n      age: null\n    }, {\n      id: 6,\n      lastName: 'Melisandre',\n      firstName: null,\n      age: 150\n    }, {\n      id: 7,\n      lastName: 'Clifford',\n      firstName: 'Ferrara',\n      age: 44\n    }, {\n      id: 8,\n      lastName: 'Frances',\n      firstName: 'Rossini',\n      age: 36\n    }, {\n      id: 9,\n      lastName: 'Roxie',\n      firstName: 'Harvey',\n      age: 65\n    }];\n    /*\r\n            export default function DataTable() {\r\n                return (\r\n                    <div style={{ height: 400, width: '100%' }}>\r\n                        <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n                    </div>\r\n                );\r\n            }\r\n    \r\n     */\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.sheety.co/a059a44709599c766a704967b9cc3d24/subscribers/subscribers\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        subscribers: result.subscribers\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      subscribers\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: subscribers.map(subscriber => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [subscriber.fullName, \" \", subscriber.gender, \" \", subscriber.emailAddress, \" \", subscriber.state]\n        }, subscriber.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default Backend; //ReactDOM.render(<Backend />, document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Anna/Desktop/Privat/Additive2/newsletter/newsletter/src/Backend.js"],"names":["React","useState","ReactDOM","DataGrid","Backend","Component","constructor","props","state","error","isLoaded","items","makeTable","columns","field","headerName","width","type","description","sortable","valueGetter","params","getValue","rows","id","lastName","firstName","age","componentDidMount","fetch","then","res","json","result","setState","subscribers","render","message","map","subscriber","fullName","gender","emailAddress"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nclass Backend extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n\r\n    makeTable(){\r\n        const columns = [\r\n            { field: 'id', headerName: 'ID', width: 70 },\r\n            { field: 'fullName', headerName: ' fullName', width: 130 },\r\n            { field: 'lastName', headerName: 'Last name', width: 130 },\r\n            {\r\n                field: 'age',\r\n                headerName: 'Age',\r\n                type: 'number',\r\n                width: 90,\r\n            },\r\n            {\r\n                field: 'fullName',\r\n                headerName: 'Full name',\r\n                description: 'This column has a value getter and is not sortable.',\r\n                sortable: false,\r\n                width: 160,\r\n                valueGetter: (params) =>\r\n                    `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\r\n            },\r\n        ];\r\n\r\n        const rows = [\r\n            { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n            { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n            { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n            { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n            { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n            { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n            { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n            { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n            { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n        ];\r\n/*\r\n        export default function DataTable() {\r\n            return (\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                    <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n                </div>\r\n            );\r\n        }\r\n\r\n */\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://api.sheety.co/a059a44709599c766a704967b9cc3d24/subscribers/subscribers\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        subscribers: result.subscribers\r\n                    });\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, subscribers } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            return (\r\n                <ul>\r\n                    {subscribers.map(subscriber => (\r\n                        <li key={subscriber.id}>\r\n                            {subscriber.fullName} {subscriber.gender} {subscriber.emailAddress} {subscriber.state}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Backend;\r\n\r\n//ReactDOM.render(<Backend />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}